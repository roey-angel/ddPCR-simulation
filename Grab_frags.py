#!/usr/bin/env python3
"""Uses a Frags_table generated by SIPSim fragments to grab genome fragments
 using start and length parameters and outputs them to fasa files
"""
import sys
import os
from csv import reader

__author__ = "Roey Angel, Sebastian Vranjes"
__version__ = "1.0"
__maintainer__ = "Roey Angel"
__email__ = "angel@bc.cas.cz"
__status__ = "Production"

genomeDir = os.path.join(sys.argv[1])
#genomeDir = os.path.join('Genomes/')
FragsDir = sys.argv[2]

with open("./" + FragsDir + '/Frags_table.txt', 'r') as read_obj:
    csv_r = reader(read_obj, delimiter = '\t')
    csv_reader = iter(csv_r)
    next(csv_reader) # skip the first row
    for frag in csv_reader:
        gName = frag[0]
        Start = int(frag[2])
        Length = int(frag[3])
        fullgName = genomeDir + "/" + str(gName) + '.fna.flat'
        with open (fullgName, 'rt') as genomeFile:
            genome = genomeFile.read()
            genome2 = genome + genome
            fragment = (genome2[Start : Start + Length ])
            #print(fragment)
            outF = open(FragsDir + "/" + gName + "_Fragment" + str(Start) + "_" + str(Length) + ".fa", "w")
            outF.write(">" + gName + frag[2] + "\n")
            outF.write(fragment)
            outF.write("\n")
            outF.close()
print('\nFragmenting complete! :D\n')
